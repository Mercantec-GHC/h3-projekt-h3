generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id Int @id @default(autoincrement())

  username       String @unique
  hashedPassword String

  Highscore Highscore[]
  Map       Map[]
  Replay    Replay[]
  Skin      Skin[]
}

model Highscore {
  id Int @id @default(autoincrement())

  userRelation User @relation(fields: [userId], references: [id])
  userId       Int

  score Int
  game  String

  replayRelation Replay @relation(fields: [replayId], references: [id])
  replayId       Int
  gameRelation   Game   @relation(fields: [gameId], references: [id])
  gameId         Int
}

model Map {
  id Int @id @default(autoincrement())

  userRelation User @relation(fields: [userId], references: [id])
  userId       Int

  Game Game[]
}

model Game {
  id   Int    @id @default(autoincrement())
  game String

  mapRelation  Map  @relation(fields: [mapId], references: [id])
  mapId        Int
  skinRelation Skin @relation(fields: [skinId], references: [id])
  skinId       Int

  Highscore Highscore[]
}

model Replay {
  id Int @id @default(autoincrement())

  userRelation User @relation(fields: [userId], references: [id])
  userId       Int

  replay String

  Highscore Highscore[]
}

model Skin {
  id Int @id @default(autoincrement())

  userRelation User @relation(fields: [userId], references: [id])
  userId       Int

  skin_path String

  Game Game[]
}
