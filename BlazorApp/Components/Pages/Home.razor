@page "/"
@using API;
@using API.Models;
@using BlazorApp.Pages;
@using BlazorBootstrap;
@using BlazorApp.Containers;
@using System.Threading.Tasks;
@using Syncfusion.Blazor.Charts;
@using Microsoft.AspNetCore.Components.Forms;
@using Syncfusion.Blazor.Charts.Chart.Internal;

@inject Microsoft.JSInterop.IJSRuntime JSRuntime
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager

@namespace BlazorApp.Components.Pages

<script src="https://cdn.amcharts.com/lib/5/index.js"></script>
<script src="https://cdn.amcharts.com/lib/5/percent.js"></script>
<script src="https://cdn.amcharts.com/lib/5/themes/Animated.js"></script>

<PageTitle>Home</PageTitle>

<h1>Home</h1>

<div class="d-flex">
    <!----------------------------- Create Plant Modal ---------------------------->
    <div>
        <!-- Trigger/Open The Modal -->
        <button id="myBtnCreatePlant" class="btn btn-primary buttons">Create Plant</button>

        <!-- The Modal -->
        <div id="myModalCreatePlant" class="modal">

            <!-- Modal content -->
            <div class="modal-content">
                <span class="close">&times;</span>

                <div class="modal-header">
                    <h5 class="modal-title">Create Plant</h5>
                </div>

                <!-- EditForm for login -->
                <EditForm Model="@plantProfile">
                    <div class="modal-body">

                        <!-- Input fields for login -->
                        <label for="plantName">Plant Name:</label><br>
                        <div class="form-group">
                            <InputText id="plantName" @bind-Value="plantProfile.PlantName" placeholder="Plant Name" required /><br><br>
                        </div>

                        <label for="plantMinMoisture">Plant Minimum Moisture:</label><br>
                        <div class="form-group">
                            <InputNumber id="plantMinMoisture" @bind-Value="plantProfile.MinWaterLevel" placeholder="Minimum Moisture:" required /><br><br>
                        </div>

                        <label for="plantMaxMoisture">Plant Maximum Moisture:</label><br>
                        <div class="form-group">
                            <InputNumber id="plantMaxMoisture" @bind-Value="plantProfile.MaxWaterLevel" placeholder="Maximum Moisture:" required /><br><br>
                        </div>

                    </div>

                    <div class="modal-footer">
                        <!-- Buttons for login -->
                        <button type="submit" class="btn btn-primary" @onclick="HandleCreatePlant">Submit</button>
                    </div>

                    <p class="error-message" id="login-error">@errorMessage</p>

                </EditForm>
            </div>
        </div>
    </div>

    <!------------------------------ Edit Plant Modal ----------------------------->
    <div>
        <!-- Trigger/Open The Modal -->
        <button id="myBtnEditPlant" class="btn btn-primary buttons">Edit Plant</button>

        <!-- The Modal -->
        <div id="myModalEditPlant" class="modal">

            <!-- Modal content -->
            <div class="modal-content">
                <span class="close">&times;</span>

                <div class="modal-header">
                    <h5 class="modal-title">Create Plant</h5>
                </div>

                <!-- EditForm for login -->
                <EditForm Model="@plantProfile">
                    <div class="modal-body">
                        <p>selected plant: @selectedEditPlant</p>
                        <!-- Input fields for login -->
                        <div class="dropdown">
                            
                            <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <text>Choose Plant</text>
                            </button>

                            <ul class="dropdown-menu">
                                @if (plants != null)
                                {
                                    @foreach (var plant in plants)
                                    {
                                        <li><button class="dropdown-item" @onclick="() => SelectEditPlant(plant)">@plant.PlantName</button></li>
                                    }
                                }
                                else
                                {
                                    <li><span class="dropdown-item">Loading...</span></li>
                                }
                            </ul>

                        </div>

                        <label for="plantMinMoisture">Plant Minimum Moisture:</label><br>
                        <div class="form-group">
                            <InputNumber id="plantMinMoisture" @bind-Value="plantProfile.MinWaterLevel" placeholder="Minimum Moisture:" required /><br><br>
                        </div>

                        <label for="plantMaxMoisture">Plant Maximum Moisture:</label><br>
                        <div class="form-group">
                            <InputNumber id="plantMaxMoisture" @bind-Value="plantProfile.MaxWaterLevel" placeholder="Maximum Moisture:" required /><br><br>
                        </div>

                    </div>

                    <div class="modal-footer">
                        <!-- Buttons for login -->
                        <button type="submit" class="btn btn-primary" @onclick="HandleEditPlant">Save Changes</button>
                    </div>

                    <p class="error-message" id="login-error">@errorMessage</p>

                </EditForm>
            </div>
        </div>
    </div>

    <!----------------------------- Setup Sensor Modal ---------------------------->
    <div>
        <!-- Trigger/Open The Modal -->
        <button id="myBtnSetupSensor" class="btn btn-primary buttons">Setup Sensor</button>

        <!-- The Modal -->
        <div id="myModalSetupSensor" class="modal">

            <!-- Modal content -->
            <div class="modal-content">
                <span class="close">&times;</span>

                <div class="modal-header">
                    <h5 class="modal-title">Setup Sensor</h5>
                </div>

                <h3>Sensor 1 - can change sensor name</h3>
                <p>selected plant: @selectedPlant1</p>

                <div class="dropdown">

                    <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        <text>Choose Plant</text>
                    </button>

                    <ul class="dropdown-menu">
                        @if (plants != null )
                        {
                            @foreach (var plant in plants)
                            {
                                <li><button class="dropdown-item" @onclick="() => SelectPlant1(plant)">@plant.PlantName</button></li>
                            }
                        }
                        else
                        {
                            <li><span class="dropdown-item">Loading...</span></li>
                        }
                    </ul>

                </div>

                <h3>Sensor 2 - can change sensor name</h3>
                <p>selected plant: @selectedPlant2</p>

                <div class="dropdown">

                    <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        <text>Choose Plant</text>
                    </button>

                    <ul class="dropdown-menu">
                        @if (plants != null)
                        {
                            @foreach (var plant in plants)
                            {
                                <li><button class="dropdown-item" @onclick="() => SelectPlant2(plant)">@plant.PlantName</button></li>
                            }
                        }
                        else
                        {
                            <li><span class="dropdown-item">Loading...</span></li>
                        }
                    </ul>

                </div>

                <div class="modal-footer">
                    <!-- Buttons for login -->
                    <button type="submit" class="btn btn-primary" @onclick="SetupSensor">Save Changes</button>
                </div>
            </div>
        </div>
    </div>
    
    <!------------------------------- Pie Chart Modal ----------------------------->
@*     <div>
        <!-- Trigger/Open The Modal -->
        <button id="myBtnPieChart" class="btn btn-primary buttons">Show Charts</button>

        <!-- The Modal -->
        <div id="myModalPieChart" class="modal">
            <!-- Modal content -->
            <div class="modal-content">
                <span class="close">&times;</span>

                <div class="modal-header">
                    <h5 class="modal-title">Charts</h5>
                </div>

                <div class="modal-body">
                    <div id="chart-container-1">
                        <select id="chart-select" class="btn btn-primary buttonSelect">
                            <option value="chartdiv1">Chart 1</option>
                            <option value="chartdiv2">Chart 2</option>
                            <option value="chartdiv3">Chart 3</option>
                        </select>
                        <div id="chartdiv1" class="chartdiv"></div>
                        <div id="chartdiv2" class="chartdiv"></div>
                        <div id="chartdiv3" class="chartdiv"></div>
                    </div>
                </div>

            </div>
        </div>
    </div>
 *@
    <!---------------------------------- Pie Chart -------------------------------->
    <div id="chart-container">
        <select id="chart-select" class="btn btn-primary buttonSelect">
            <option value="chartdiv1">Chart 1</option>
            <option value="chartdiv2">Chart 2</option>
            <option value="chartdiv3">Chart 3</option>
        </select>
        <div id="chartdiv1" class="chartdiv"></div>
        <div id="chartdiv2" class="chartdiv"></div>
        <div id="chartdiv3" class="chartdiv"></div>
    </div>

</div>

    <!-------------------------------- Modal Script ------------------------------->
<script>
    // Modal functionality
    var modals = document.querySelectorAll('.modal');
    var buttons = document.querySelectorAll('.btn');
    var spans = document.querySelectorAll('.close');

    buttons.forEach(function (button, index) {
        button.addEventListener('click', function () {
            modals[index].style.display = "block";
            createCharts(); // Create charts when modal is opened
        });
    });

    spans.forEach(function (span, index) {
        span.addEventListener('click', function () {
            modals[index].style.display = "none";
        });
    });

    window.onclick = function (event) {
        modals.forEach(function (modal) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        });
    };

    function loginUser() {
        alert("User has been logged in");
    }

</script>

<script>

    am5.ready(function () {
        // Common chart creation function
        function createChart(rootId, data) {
            
            var root = am5.Root.new(rootId);
            
            root.setThemes([am5themes_Animated.new(root)]);
            
            var chart = root.container.children.push(
                am5percent.PieChart.new(root, { endAngle: 270 })
            );
            
            var series = chart.series.push(
                am5percent.PieSeries.new(root, {
                    valueField: "value",
                    categoryField: "category",
                    endAngle: 270
                })
            );
            series.states.create("hidden", { endAngle: -90 });
            
            series.data.setAll(data);
            
            series.labels.template.setAll({
                fill: am5.color(0xFFFFFF), // Set label text color to white
            });
            
            series.slices.template.setAll({
            });

            series.appear(1000, 100);
        }

        // Data for the charts
        var data1 = [
            { category: "Moisture Level", value: 601.9 },
            { category: "Drought Level", value: 301.9 }
        ];
        var data2 = [
            { category: "Moisture Level", value: 641.9 },
            { category: "Drought Level", value: 358.1 }
        ];
        var data3 = [
            { category: "Moisture Level", value: 751.9 },
            { category: "Drought Level", value: 208.1 }
        ];

        // Create charts
        createChart("chartdiv1", data1);
        createChart("chartdiv2", data2);
        createChart("chartdiv3", data3);

        // Dropdown change event
        document.getElementById("chart-select").addEventListener("change", function () {
            var selectedChart = this.value;
            document.querySelectorAll(".chartdiv").forEach(function (chartDiv) {
                chartDiv.style.display = "none";
            });
            document.getElementById(selectedChart).style.display = "block";
        });
    });
</script>

    <!------------------------------------ Code ----------------------------------->
<tr>
    @code {
        private string selectedPlant1 = "";
        private string selectedPlant2 = "";
        private string selectedEditPlant = "";
        private int selectedEditPlantId = 0;

        protected override async Task OnInitializedAsync()
        {
            await GetListOfPlants(); // This method should populate the 'plants' list
        }

        public void SelectPlant1(Plant plant)
        {
            selectedPlant1 = plant.PlantName;
        }

        public void SelectPlant2(Plant plant)
        {
            selectedPlant2 = plant.PlantName;
        }

        private void SelectEditPlant(Plant plant)
        {
            selectedEditPlant = plant.PlantName;
            selectedEditPlantId = plant.Id;
        }
    }
</tr>
